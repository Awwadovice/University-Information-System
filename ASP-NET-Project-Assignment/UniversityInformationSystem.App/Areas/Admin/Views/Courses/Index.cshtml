@Html.ValidationMessage("Teacher")
@(Html.Kendo().Grid<UniversityInformationSystem.Models.ViewModels.Admin.CourseViewModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Name);
          columns.Bound(c => c.Description);
          columns.Bound(c => c.StudentsCount);
          columns.Bound(c => c.IsOpen);
          columns.Bound(c => c.Teacher);
          columns.Command(command => {
              command.Edit();
              command.Destroy();
          }).Width(180);
      })
      .ToolBar(toolbar => {
          toolbar.Create();
      })
      .ColumnMenu()
      .Editable(editable => editable.Mode(GridEditMode.PopUp))
      .Editable(settings => settings.ConfirmDelete("Yes"))
      .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
      .Sortable(sortable => {
          sortable.SortMode(GridSortMode.MultipleColumn);
      })
      .Filterable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .PageSize(5)
          .Model(model =>
          {
              model.Id(p => p.Id);
              model.Field(p => p.Id).Editable(false);
              model.Field(p => p.StudentsCount).Editable(false);
              model.Field(p => p.IsOpen).Editable(true);
          })
          .Read(read =>
          {
              read.Action("CourseViewModels_Read", "Courses");
          })
          .Create(create => create.Action("CourseViewModels_Create", "Courses"))
          .Update(update =>
          {
              update.Action("CourseViewModels_Update", "Courses")
                  .Data("onAutoCompleteTeacher");
          })
          .Destroy(destroy => destroy.Action("CourseViewModels_Destroy", "Courses"))
      )
      )

@section scripts {
    <script>
        function onAutoCompleteTeacher() {
            return {
                teacher: $("#Teacher").val()
            }
        }
    </script>
}
