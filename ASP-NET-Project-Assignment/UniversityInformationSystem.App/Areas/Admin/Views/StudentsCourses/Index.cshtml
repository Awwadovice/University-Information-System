@using UniversityInformationSystem.Models.ViewModels.Admin
@(Html.Kendo().Grid<AdminStudentCourseViewModel>()
      .Name("studentscoursesgrid")
      .Columns(columns =>
      {
          columns.Bound(c => c.StudentUsername).EditorTemplateName("StudentEditor");
          columns.Bound(c => c.CourseName).EditorTemplateName("CourseEditor");
          columns.Command(command =>
          {
              command.Destroy();
          }).Width(120);
      })
      .ToolBar(toolbar =>
      {
          toolbar.Create();
          toolbar.Save();
      })
      .ColumnMenu()
      .Pageable(pageable => pageable
          .Refresh(true)
          .PageSizes(true)
          .ButtonCount(5))
      .Sortable(sortable =>
      {
          sortable.SortMode(GridSortMode.SingleColumn);
      })
      .Editable(editable => editable.Mode(GridEditMode.InCell))
      .Filterable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .PageSize(5)
          .Batch(true)
          .ServerOperation(false)
          .Model(model =>
          {
              model.Id(sc => sc.StudentId);
          })
          .Read(read => read.Action("StudentCourse_Read", "StudentsCourses"))
          .Create(create => create.Action("StudentCourse_Create", "StudentsCourses"))
          .Update(update => update.Action("StudentCourse_Update", "StudentsCourses"))
          .Destroy(destroy => destroy.Action("StudentCourse_Destroy", "StudentsCourses"))
      ))

@section Scripts {
    <script>
        function onAutoCompleteCourses() {
            return {
                courseName: $("#CourseName").val()
            }
        }
        function onAutoCompleteUsername() {
            return {
                username: $("#StudentUsername").val()
            }
        }
    </script>

}


